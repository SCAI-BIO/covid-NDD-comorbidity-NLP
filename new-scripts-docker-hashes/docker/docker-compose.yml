version: '3.8'

services:
  neo4j:
    image: neo4j:5.13.0-enterprise
    container_name: covid-ndd-neo4j
    environment:
      - NEO4J_AUTH=neo4j/reproducible_password_2024
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_memory_heap_initial__size=2G
      - NEO4J_dbms_memory_heap_max__size=4G
      - NEO4J_dbms_memory_pagecache_size=2G
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*,apoc.*
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - ./cypher:/cypher:ro
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p reproducible_password_2024 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - covid-ndd-network

  pipeline:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: production
    container_name: covid-ndd-pipeline
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=reproducible_password_2024
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./results:/app/results
      - ./logs:/app/logs
      - pipeline_cache:/app/cache
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - covid-ndd-network
    command: ["python", "main.py", "--mode", "full_pipeline"]

  data_validator:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: application
    container_name: covid-ndd-validator
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./data:/app/data:ro
      - ./results:/app/results
    command: ["python", "scripts/validate_data.py", "--verify-hashes", "--check-completeness"]
    networks:
      - covid-ndd-network

  # Optional: Jupyter notebook for interactive analysis
  notebook:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: application
    container_name: covid-ndd-notebook
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=reproducible_password_2024
      - JUPYTER_ENABLE_LAB=yes
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/app/notebooks
      - ./data:/app/data
      - ./results:/app/results
    depends_on:
      neo4j:
        condition: service_healthy
    command: ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root", "--notebook-dir=/app/notebooks"]
    networks:
      - covid-ndd-network
    profiles:
      - development

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  pipeline_cache:
    driver: local

networks:
  covid-ndd-network:
    driver: bridge

# Override for development
# Usage: docker-compose --profile development up
# This will also start the Jupyter notebook service